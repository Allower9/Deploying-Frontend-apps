name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server: [1, 2]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

    - name: Verify SSH connection to server ${{ matrix.server }}
      run: |
        SERVER_IP=${{ matrix.server == 1 && secrets.PROD_SERVER_IP_1 || secrets.PROD_SERVER_IP_2 }}
        echo "Testing connection to $SERVER_IP..."
        nc -zv -w 5 $SERVER_IP 22 || {
          echo "::error::Cannot connect to server ${{ matrix.server }} ($SERVER_IP) on port 22"
          exit 1
        }
        ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts

    - name: Deploy to server ${{ matrix.server }}
      run: |
        SERVER_IP=${{ matrix.server == 1 && secrets.PROD_SERVER_IP_1 || secrets.PROD_SERVER_IP_2 }}
        echo "Deploying to server ${{ matrix.server }} ($SERVER_IP)..."
        
        # Копируем compose-файл с правильным именем
        scp -o ConnectTimeout=10 -o StrictHostKeyChecking=no docker-compose.yaml root@$SERVER_IP:/home/user1/Deploying-Frontend-apps/ || {
          echo "::error::Failed to copy files to server ${{ matrix.server }}"
          exit 1
        }
        
        ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no root@$SERVER_IP << 'EOF'
          set -e
          cd /home/user1/Deploying-Frontend-apps
          echo "Stopping existing containers..."
          docker-compose down || true
          echo "Pulling new image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          echo "Starting containers..."
          docker-compose up -d
          echo "Deployment completed on $(hostname)!"
          docker ps
        EOF
