name: React App Deployment

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server: [1, 2]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Docker Hub Login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

    - name: Deploy to server ${{ matrix.server }}
      env:
        SERVER_IP: ${{ matrix.server == 1 && secrets.PROD_SERVER_IP_1 || secrets.PROD_SERVER_IP_2 }}
        DEPLOY_PATH: /home/user1/Deploying-Frontend-apps
      run: |
        # Create minimal compose file on the fly
        cat << 'COMPOSE' > docker-compose.temp.yml
        version: '3.8'
        services:
          frontend:
            image: ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            ports:
              - "80:80"
            restart: unless-stopped
        COMPOSE

        # Deploy with separate SCP and SSH commands
        scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 docker-compose.temp.yml root@$SERVER_IP:$DEPLOY_PATH/docker-compose.yml
        
        ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 root@$SERVER_IP "
          set -e
          cd $DEPLOY_PATH
          docker-compose down || true
          docker-compose pull
          docker-compose up -d
          echo 'Deployment completed on server ${{ matrix.server }}'
          docker ps
        "
