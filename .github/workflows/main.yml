name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Ваши шаги тестирования здесь

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

    - name: Deploy to Server 1
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yaml root@${{ secrets.PROD_SERVER_IP_1 }}:/home/user1/Deploying-Frontend-apps/
        ssh -o StrictHostKeyChecking=no root@${{ secrets.PROD_SERVER_IP_1 }} << 'EOF'
          cd /home/user1/Deploying-Frontend-apps
          docker-compose down
          docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker-compose up -d
          echo "Deployment completed on Server 1!"
          docker ps
        EOF

    - name: Deploy to Server 2
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yaml root@${{ secrets.PROD_SERVER_IP_2 }}:/home/user1/Deploying-Frontend-apps/
        ssh -o StrictHostKeyChecking=no root@${{ secrets.PROD_SERVER_IP_2 }} << 'EOF'
          cd /home/user1/Deploying-Frontend-apps
          docker-compose down
          docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker-compose up -d
          echo "Deployment completed on Server 2!"
          docker ps
        EOF
