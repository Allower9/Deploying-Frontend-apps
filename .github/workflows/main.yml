
name: CI/CD Pipeline with Load Balancer

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run build

    - name: Validate HTML
      run: |
        sudo apt-get install -y tidy
        tidy -q -e index.html || echo "HTML validation failed! Fix markup errors."

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

    - name: Deploy to Server 1
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ secrets.PROD_SERVER_IP_1 }}:/root/app/
        ssh -o StrictHostKeyChecking=no root@${{ secrets.PROD_SERVER_IP_1 }} << 'EOF'
          cd /root/app
          docker-compose down
          docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest
          docker-compose up -d
          echo "Deployment to Server 1 completed!"
          docker ps
        EOF

    - name: Deploy to Server 2
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ secrets.PROD_SERVER_IP_2 }}:/root/app/
        ssh -o StrictHostKeyChecking=no root@${{ secrets.PROD_SERVER_IP_2 }} << 'EOF'
          cd /root/app
          docker-compose down
          docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest
          docker-compose up -d
          echo "Deployment to Server 2 completed!"
          docker ps
        EOF

    - name: Update Load Balancer
      run: |
        # Add your load balancer update commands here
        # For example, if using Nginx as LB:
        scp -o StrictHostKeyChecking=no nginx-load-balancer.conf root@${{ secrets.LB_SERVER_IP }}:/etc/nginx/conf.d/
        ssh -o StrictHostKeyChecking=no root@${{ secrets.LB_SERVER_IP }} "nginx -t && systemctl reload nginx"
        echo "Load balancer configuration updated"
